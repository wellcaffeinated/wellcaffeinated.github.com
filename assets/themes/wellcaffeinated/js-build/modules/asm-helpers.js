/**
 * asm-helpers.js
 * A simple helper module for managing memory allocation of
 * collections of objects, particularly for use in asm.js code
 *
 * Copyright (c) 2013 Jasper Palfree <jasper@wellcaffeinated.net>
 * Licensed MIT
 */

(function(e,t){typeof exports=="object"?module.exports=t():typeof define=="function"&&define.amd?define(t):e.ASMHelpers=t()})(this,function(){var e={};e.Types={bool:{size:Uint8Array.BYTES_PER_ELEMENT,pow:Math.ceil(Math.log(Uint8Array.BYTES_PER_ELEMENT)/Math.LN2),view:Uint8Array},uint8:{size:Uint8Array.BYTES_PER_ELEMENT,pow:Math.ceil(Math.log(Uint8Array.BYTES_PER_ELEMENT)/Math.LN2),view:Uint8Array},int8:{size:Int8Array.BYTES_PER_ELEMENT,pow:Math.ceil(Math.log(Int8Array.BYTES_PER_ELEMENT)/Math.LN2),view:Int8Array},uint16:{size:Int16Array.BYTES_PER_ELEMENT,pow:Math.ceil(Math.log(Int16Array.BYTES_PER_ELEMENT)/Math.LN2),view:Int16Array},int16:{size:Int16Array.BYTES_PER_ELEMENT,pow:Math.ceil(Math.log(Int16Array.BYTES_PER_ELEMENT)/Math.LN2),view:Int16Array},uint32:{size:Int32Array.BYTES_PER_ELEMENT,pow:Math.ceil(Math.log(Int32Array.BYTES_PER_ELEMENT)/Math.LN2),view:Int32Array},uint:{size:Uint32Array.BYTES_PER_ELEMENT,pow:Math.ceil(Math.log(Uint32Array.BYTES_PER_ELEMENT)/Math.LN2),view:Uint32Array},int32:{size:Int32Array.BYTES_PER_ELEMENT,pow:Math.ceil(Math.log(Int32Array.BYTES_PER_ELEMENT)/Math.LN2),view:Int32Array},"int":{size:Int32Array.BYTES_PER_ELEMENT,pow:Math.ceil(Math.log(Int32Array.BYTES_PER_ELEMENT)/Math.LN2),view:Int32Array},float32:{size:Float32Array.BYTES_PER_ELEMENT,pow:Math.ceil(Math.log(Float32Array.BYTES_PER_ELEMENT)/Math.LN2),view:Float32Array},"float":{size:Float32Array.BYTES_PER_ELEMENT,pow:Math.ceil(Math.log(Float32Array.BYTES_PER_ELEMENT)/Math.LN2),view:Float32Array},float64:{size:Float64Array.BYTES_PER_ELEMENT,pow:Math.ceil(Math.log(Float64Array.BYTES_PER_ELEMENT)/Math.LN2),view:Float64Array},"double":{size:Float64Array.BYTES_PER_ELEMENT,pow:Math.ceil(Math.log(Float64Array.BYTES_PER_ELEMENT)/Math.LN2),view:Float64Array}};var t=function(t,n,r,i){var s,o;this.setPtr(n),this.buffer=i;for(s in r)o=r[s],this.addProp(s,o.ptr,o.type);for(s in t)this[s]=t[s]};t.prototype={setPtr:function(e){this.ptr=e},getPtr:function(){return this.ptr},addProp:function(t,n,r){var i=this,s=e.Types[r],o=new s.view(i.buffer),u=s.pow;i.__defineGetter__(t,function(){return o[i.ptr+n>>u]}),i.__defineSetter__(t,function(e){return o[i.ptr+n>>u]=e})}};var n=function r(t,n){if(!(this instanceof r))return new r(t,n);n=n||{};var i,s,o,u=0,a,f,l,c=0,h={},p=[{},{},{},{}],d=n.maxObjects||1e3;for(i in t){s=t[i];if(typeof s=="string"){s=s.toLowerCase(),a=e.Types[s],o=a.size;if(!o)throw"Type "+s+" not supported.";u+=o,c=o>c?o:c,f=a.pow,p[f][i]=s}}u=Math.ceil(u/c)*c,this.objSize=u,this.blockSize=c,l=1<<Math.ceil(Math.log(u*d)/Math.LN2),this.buffer=new ArrayBuffer(l),a=0;for(var v=p.length-1;v>=0;v--)for(i in p[v])!function(t,n,r){var i=e.Types[n];h[t]={ptr:r,pow:i.pow,size:i.size,type:n},a+=i.size}(i,p[v][i],a);this._schema=h,this.objs=[]};return n.prototype={add:function(e){var n=this.objSize*this.objs.length,r=new t(e,n,this._schema,this.buffer);this.objs.push(r)},remove:function(e,t){e|=0,t=t|0||1;if(e>this.objs.length)return;var n=this.objs,r,i=this.objSize,s=new Int8Array(this.buffer,e*i);s.set(s.subarray(t*i));for(var o=e+t,u=n.length;o<u;++o)r=n[o],r.setPtr(r.getPtr()-t*i);n.splice(e,t)},at:function(e){return this.objs[e]},count:function(){return this.objs.length},clear:function(){delete this.objs,this.objs=[]},each:function(e){var t=this.objs;for(var n=0,r=t.length;n<r;++n)e(t[n],n)},include:function(e){var t=this,n={Uint8Array:Uint8Array,Int8Array:Int8Array,Uint16Array:Uint16Array,Int16Array:Int16Array,Uint32Array:Uint32Array,Int32Array:Int32Array,Float32Array:Float32Array,Float64Array:Float64Array,Math:Math},r={getLen:function(){return t.objs.length},ptr:t.ptr,objSize:t.objSize},i,s;for(s in t._schema)r["$"+s]=t._schema[s].ptr;i=e(n,r,t.buffer);for(s in i)t[s]=i[s]}},e.Collection=n,e});